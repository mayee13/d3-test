{"ast":null,"code":"var _jsxFileName = \"/Users/viviansun/d3-test/src/components/NetWorkGraph.js\",\n  _s = $RefreshSig$();\n// src/NetworkGraph.js\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    const width = 600;\n    const height = 400;\n\n    // graph data (nodes and edges)\n    const data = {\n      nodes: [{\n        id: 'A'\n      }, {\n        id: 'B'\n      }, {\n        id: 'C'\n      }, {\n        id: 'D'\n      }],\n      links: [{\n        source: 'A',\n        target: 'B'\n      }, {\n        source: 'A',\n        target: 'C'\n      }, {\n        source: 'B',\n        target: 'D'\n      }]\n    };\n\n    // initialize canvas to hold the graph\n    const svg = d3.select(svgRef.current).attr('width', 600).attr('height', 400);\n    const simulation = d3.forceSimulation(data.nodes).force('link', d3.forceLink(data.links).id(d => d.id).distance(100)).force('charge', d3.forceManyBody().strength(-200)).force('center', d3.forceCenter(width / 2, height / 2));\n    const link = svg.selectAll('.link').data(data.links).enter().append('line').attr('class', 'link').attr('stroke', '#000').attr('stroke-width', 2);\n    const node = svg.selectAll('.node').data(data.nodes).enter().append('circle').attr('class', 'node').attr('r', 10).attr('fill', 'blue');\n    node.attr('cx', (d, i) => (i + 1) * 100).attr('cy', height / 2);\n    const label = svg.selectAll('.label').data(data.nodes).enter().append('text').attr('class', 'label').attr('x', (d, i) => (i + 1) * 100 + 12).attr('y', height / 2 + 4).text(d => d.id);\n    svg.selectAll('.label').data(data.nodes).enter().append('text').attr('class', 'label').attr('x', (d, i) => (i + 1) * 100 + 12).attr('y', height / 2 + 4).text(d => d.id);\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      label.attr('x', d => d.x + 12) // Offset label next to the node\n      .attr('y', d => d.y + 4); // Offset label slightly below the node\n    });\n    node.call(d3.drag().on('start', dragStart).on('drag', drag).on('end', dragEnd));\n    function dragStart(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function drag(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnd(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_s(NetworkGraph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","width","height","data","nodes","id","links","source","target","svg","select","current","attr","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","link","selectAll","enter","append","node","i","label","text","on","x","y","call","drag","dragStart","dragEnd","event","active","alphaTarget","restart","fx","fy","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viviansun/d3-test/src/components/NetWorkGraph.js"],"sourcesContent":["// src/NetworkGraph.js\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst NetworkGraph = () => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const width = 600;\n    const height = 400;\n\n    // graph data (nodes and edges)\n    const data = {\n        nodes: [\n          { id: 'A' },\n          { id: 'B' },\n          { id: 'C' },\n          { id: 'D' },\n        ],\n        links: [\n          { source: 'A', target: 'B' },\n          { source: 'A', target: 'C' },\n          { source: 'B', target: 'D' },\n        ],\n      };\n\n      // initialize canvas to hold the graph\n      const svg = d3.select(svgRef.current)\n        .attr('width', 600)\n        .attr('height', 400);\n    \n     const simulation = d3.forceSimulation(data.nodes)\n      .force('link', d3.forceLink(data.links).id(d => d.id).distance(100))\n      .force('charge', d3.forceManyBody().strength(-200))\n      .force('center', d3.forceCenter(width/2, height/2)); \n     \n    const link = svg.selectAll('.link')\n      .data(data.links)\n      .enter().append('line')\n      .attr('class', 'link')\n      .attr('stroke', '#000')\n      .attr('stroke-width', 2); \n\n    const node = svg.selectAll('.node')\n      .data(data.nodes)\n      .enter().append('circle')\n      .attr('class', 'node')\n      .attr('r', 10)\n      .attr('fill', 'blue'); \n    \n    node.attr('cx', (d,i) => (i+1)*100).attr('cy', height/2); \n\n    const label = svg.selectAll('.label')\n     .data(data.nodes)\n     .enter().append('text')\n     .attr('class', 'label')\n     .attr('x', (d, i) => (i + 1) * 100 + 12)\n     .attr('y', height / 2 + 4)\n     .text(d => d.id);\n\n    svg.selectAll('.label')\n      .data(data.nodes)\n      .enter().append('text')\n      .attr('class', 'label')\n      .attr('x', (d, i) => (i+1)*100 + 12)\n      .attr('y', height/2 + 4)\n      .text(d => d.id)\n\n    simulation.on('tick', () => {\n        link\n          .attr('x1', d => d.source.x)\n          .attr('y1', d => d.source.y)\n          .attr('x2', d => d.target.x)\n          .attr('y2', d => d.target.y); \n        node\n          .attr('cx', d => d.x)\n          .attr('cy', d => d.y); \n        label\n          .attr('x', d => d.x + 12)  // Offset label next to the node\n          .attr('y', d => d.y + 4);   // Offset label slightly below the node\n    })\n\n    node.call(d3.drag()\n      .on('start', dragStart)\n      .on('drag', drag)\n      .on('end', dragEnd)); \n\n\n    function dragStart(event, d) {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n    }\n  \n    function drag(event, d) {\n        d.fx = event.x;\n        d.fy = event.y;\n    }\n  \n    function dragEnd(event, d) {\n        if (!event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n    }\n      \n  }, [])\n\n  return <div>\n    <svg ref = {svgRef}></svg\n    ></div>\n};\n\nexport default NetworkGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}