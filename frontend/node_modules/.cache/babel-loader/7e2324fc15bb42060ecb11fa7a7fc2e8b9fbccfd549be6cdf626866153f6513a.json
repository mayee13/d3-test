{"ast":null,"code":"var _jsxFileName = \"/Users/viviansun/d3-test/src/components/NetWorkGraph.js\",\n  _s = $RefreshSig$();\n// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { dijkstra } from '../algorithm/dijkstra';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef();\n\n  // constants for creating graph\n  const [numNodes, setNumNodes] = useState(1);\n  const [links, setLinks] = useState([]);\n  const [newStart, setNewStart] = useState(\"\");\n  const [newEnd, setNewEnd] = useState(\"\");\n  const [newWeight, setNewWeight] = useState(0);\n\n  // constants for visualization \n  const [visited, setVisited] = useState([]);\n  const [path, setPath] = useState([]);\n  const [current, setCurrent] = useState(null);\n  const [dijkstraStart, setDijkstraStart] = useState(\"A\");\n  const [dijkstraEnd, setDijkstraEnd] = useState(\"A\");\n\n  // console.log(numNodes); \n  const handleNumNodeChange = event => {\n    setNumNodes(event.target.value);\n    setLinks([]);\n  };\n  const handleStartChange = event => {\n    // console.log(\"changing start to...\")\n    // console.log(event.target.value)\n    setNewStart(event.target.value);\n  };\n  const handleEndChange = event => {\n    // console.log(\"changing end to...\")\n    // console.log(event.target.value)\n    setNewEnd(event.target.value);\n  };\n  const handleLinksChange = event => {\n    // console.log(\"adding link between...\")\n    // console.log(newStart)\n    // console.log(newEnd)\n    if (newStart !== \"Select a node\" && newEnd !== \"Select a node\") {\n      addNewLink(newStart, newEnd);\n    }\n  };\n  const addNewLink = (startNode, endNode) => {\n    // console.log(\"adding new link...\")\n    // console.log(startNode)\n    // console.log(endNode)\n    const updatedLinks = [...links, {\n      source: startNode,\n      target: endNode,\n      weight: newWeight\n    }];\n    setLinks(updatedLinks);\n  };\n  const handleClearEdges = event => {\n    setLinks([]);\n  };\n  const handleNewWeight = event => {\n    setNewWeight(event.target.value);\n  };\n  const handleDijkstraStart = event => {\n    setDijkstraStart(event.target.value);\n  };\n  const handleDijkstraEnd = event => {\n    setDijkstraEnd(event.target.value);\n  };\n  const handleDijkstra = async event => {\n    const path = await dijkstra(links, dijkstraStart, dijkstraEnd, (updatedVisited, updatedCurrent) => {\n      setVisited(updatedVisited);\n      setCurrent(updatedCurrent);\n    });\n    console.log(\"handeling dijkstras...\");\n    // console.log(path)\n    const pathLinks = [];\n    for (const link of path.steps) {\n      pathLinks.push({\n        start: link.source,\n        end: link.target\n      });\n    }\n    // console.log(\"pathsLinks...\"); \n    // console.log(pathLinks);\n    setPath(pathLinks);\n  };\n  const handleReset = () => {\n    setVisited([]);\n    setPath([]);\n    setCurrent(null);\n  };\n  useEffect(() => {\n    // console.log(\"current links...\")\n    // console.log(links)\n    console.log(\"network graph visited...\");\n    console.log(visited);\n    console.log(\"network graph current...\");\n    console.log(current);\n    const width = 600;\n    const height = 400;\n    const nodes = [];\n    if (numNodes <= 26) {\n      for (let i = 0; i < numNodes; i++) {\n        nodes.push({\n          id: String.fromCharCode(65 + i)\n        });\n      }\n    }\n\n    // const links = []; \n\n    // if (numNodes <= 26) {\n    //     for (let i = 0; i < numNodes; i++) {\n    //         for (let j =i + 1; j < numNodes; j++) {\n    //             links.push({ source: nodes[i].id, target: nodes[j].id}); \n    //         }\n    //     }\n    // }\n\n    const currLinks = [];\n    for (const element of links) {\n      currLinks.push({\n        source: element.source,\n        target: element.target,\n        weight: element.weight\n      });\n    }\n\n    // Initialize canvas to hold the graph\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll(\"*\").remove();\n\n    // Define arrow marker\n    svg.append('defs').append('marker').attr('id', 'arrow').attr('viewBox', '0 0 10 10').attr('refX', 25).attr('refY', 5).attr('markerWidth', 6).attr('markerHeight', 6).attr('orient', 'auto').append('path').attr('d', 'M 0 0 L 10 5 L 0 10 z').attr('fill', '#7f8c8d');\n    const simulation = d3.forceSimulation(nodes).force('center', d3.forceCenter(width / 2, height / 2)).force('charge', d3.forceManyBody()).force('link', d3.forceLink(currLinks).id(d => d.id).distance(100)).on('tick', ticked);\n    const linkSelection = svg.selectAll('.link').data(currLinks).enter().append('line').attr('class', 'link').attr('stroke', d => matches(path, d) ? 'green' : 'black') // check current path\n    .attr('stroke-width', 1).attr('marker-end', 'url(#arrow)');\n    linkSelection.attr('fill', d => {\n      if (matches(path, d)) return 'green';\n      return 'black';\n    });\n    function matches(path, link) {\n      // console.log('matches...')\n      // console.log(link)\n      for (const step of path) {\n        // console.log(step)\n        if (step.start === link.source.id && step.end === link.target.id) {\n          return true;\n        }\n      }\n      return false;\n    }\n    const nodeSelection = svg.selectAll('circle').data(nodes).enter().append('circle').attr('r', 10).attr('fill', d => visited.includes(d.id) ? 'orange' : 'steelblue').attr('stroke', d => path.includes(d.id) ? 'green' : 'none').call(d3.drag().on('start', dragStart).on('drag', drag).on('end', dragEnd));\n    nodeSelection.attr('fill', d => {\n      if (d.id === current) return 'red';\n      if (path.includes(d.id)) return 'green'; // Shortest path nodes\n      if (visited.includes(d.id)) return 'orange'; // Visited nodes\n      return 'steelblue'; // Default\n    });\n    const labelSelection = svg.selectAll('text').data(nodes).enter().append('text').text(d => d.id) // Display the node ID\n    .attr('font-size', 10).attr('fill', \"white\").attr('text-anchor', 'middle') // Center-align the text horizontally\n    .attr('dy', 4); // Position the text slightly above the circle\n\n    const linkLabels = svg.selectAll('.link-label').data(currLinks).enter().append('text').attr('class', 'link-label').text(d => d.weight) // Show the weight as text\n    .attr('font-size', 12).attr('fill', 'black');\n    function ticked() {\n      nodeSelection.attr('cx', d => d.x).attr('cy', d => d.y);\n      linkSelection.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      labelSelection.attr('x', d => d.x).attr('y', d => d.y); // Align the text exactly with the node center\n      linkLabels.attr('x', d => (d.source.x + d.target.x) / 2 + 2).attr('y', d => (d.source.y + d.target.y) / 2 + 2);\n    }\n    function dragStart(event, d) {\n      // console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function drag(event, d) {\n      // console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnd(event, d) {\n      // console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, [numNodes, links, visited, path, current]);\n  const elements = [];\n  elements.push(/*#__PURE__*/_jsxDEV(\"option\", {\n    children: \"Select a node\"\n  }, -1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 15\n  }, this));\n  if (numNodes <= 26) {\n    for (let i = 0; i < numNodes; i++) {\n      const value = String.fromCharCode(65 + i);\n      elements.push(/*#__PURE__*/_jsxDEV(\"option\", {\n        children: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select number of nodes: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numNodes,\n        onChange: handleNumNodeChange,\n        max: \"26\",\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add start of new edge: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newStart,\n        onChange: handleStartChange,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add end of new edge: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newEnd,\n        onChange: handleEndChange,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add weight of new edge: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newWeight,\n        onChange: handleNewWeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLinksChange,\n        children: \" Add New Edge \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 14\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearEdges,\n        children: \"Clear Edges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add start node: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dijkstraStart,\n        onChange: handleDijkstraStart,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add end node: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dijkstraEnd,\n        onChange: handleDijkstraEnd,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDijkstra,\n        children: \" Run Dijkstra's \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 74\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkGraph, \"h+R+AJg7ywUMszTS5U7OK/xLat8=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","dijkstra","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","numNodes","setNumNodes","links","setLinks","newStart","setNewStart","newEnd","setNewEnd","newWeight","setNewWeight","visited","setVisited","path","setPath","current","setCurrent","dijkstraStart","setDijkstraStart","dijkstraEnd","setDijkstraEnd","handleNumNodeChange","event","target","value","handleStartChange","handleEndChange","handleLinksChange","addNewLink","startNode","endNode","updatedLinks","source","weight","handleClearEdges","handleNewWeight","handleDijkstraStart","handleDijkstraEnd","handleDijkstra","updatedVisited","updatedCurrent","console","log","pathLinks","link","steps","push","start","end","handleReset","width","height","nodes","i","id","String","fromCharCode","currLinks","element","svg","select","attr","selectAll","remove","append","simulation","forceSimulation","force","forceCenter","forceManyBody","forceLink","d","distance","on","ticked","linkSelection","data","enter","matches","step","nodeSelection","includes","call","drag","dragStart","dragEnd","labelSelection","text","linkLabels","x","y","alphaTarget","restart","fx","fy","elements","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","max","min","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/viviansun/d3-test/src/components/NetWorkGraph.js"],"sourcesContent":["// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { dijkstra } from '../algorithm/dijkstra';\n\nconst NetworkGraph = () => {\n  const svgRef = useRef();\n\n  // constants for creating graph\n  const [numNodes, setNumNodes] = useState(1); \n  const [links, setLinks] = useState([]); \n  const [newStart, setNewStart] = useState(\"\");\n  const [newEnd, setNewEnd] = useState(\"\");\n  const [newWeight, setNewWeight] = useState(0); \n\n  // constants for visualization \n  const [visited, setVisited] = useState([]); \n  const [path, setPath] = useState([]); \n  const [current, setCurrent] = useState(null); \n  const [dijkstraStart, setDijkstraStart] = useState(\"A\"); \n  const [dijkstraEnd, setDijkstraEnd] = useState(\"A\")\n\n  // console.log(numNodes); \n  const handleNumNodeChange = (event) => {\n    setNumNodes(event.target.value); \n    setLinks([])\n  }\n\n  const handleStartChange = (event) => {\n    // console.log(\"changing start to...\")\n    // console.log(event.target.value)\n    setNewStart(event.target.value); \n  }\n\n  const handleEndChange = (event) => {\n    // console.log(\"changing end to...\")\n    // console.log(event.target.value)\n    setNewEnd(event.target.value); \n  }\n\n  const handleLinksChange = (event) => {\n    // console.log(\"adding link between...\")\n    // console.log(newStart)\n    // console.log(newEnd)\n    if (newStart !== \"Select a node\" && newEnd !== \"Select a node\") {\n        addNewLink(newStart, newEnd); \n    }\n  }\n\n  const addNewLink = (startNode, endNode) => {\n    // console.log(\"adding new link...\")\n    // console.log(startNode)\n    // console.log(endNode)\n    const updatedLinks = [...links, { source: startNode, target: endNode, weight: newWeight }];\n    setLinks(updatedLinks); \n  }\n\n  const handleClearEdges = (event) => {\n    setLinks([]);\n  }\n\n  const handleNewWeight = (event) => {\n    setNewWeight(event.target.value); \n  }\n\n  const handleDijkstraStart = (event) => {\n    setDijkstraStart(event.target.value);\n  }\n\n  const handleDijkstraEnd = (event) => {\n    setDijkstraEnd(event.target.value); \n  }\n\n  const handleDijkstra = async (event) => {\n    const path = await dijkstra(links, dijkstraStart, dijkstraEnd, (updatedVisited, updatedCurrent) => {\n        setVisited(updatedVisited);\n        setCurrent(updatedCurrent); \n    }); \n    console.log(\"handeling dijkstras...\")\n    // console.log(path)\n    const pathLinks = [];\n    for (const link of path.steps) {\n        pathLinks.push({start: link.source, end: link.target}); \n    }\n    // console.log(\"pathsLinks...\"); \n    // console.log(pathLinks);\n    setPath(pathLinks); \n  }\n\n  const handleReset = () => {\n    setVisited([]);\n    setPath([]);\n    setCurrent(null); \n  }\n\n  useEffect(() => {\n    // console.log(\"current links...\")\n    // console.log(links)\n    console.log(\"network graph visited...\")\n    console.log(visited)\n    console.log(\"network graph current...\")\n    console.log(current)\n    const width = 600;\n    const height = 400;\n\n    const nodes = []; \n\n    if (numNodes <= 26) {\n        for (let i = 0; i < numNodes; i++) {\n            nodes.push({id: String.fromCharCode(65 + i)});\n        }\n    }\n    \n    // const links = []; \n    \n    // if (numNodes <= 26) {\n    //     for (let i = 0; i < numNodes; i++) {\n    //         for (let j =i + 1; j < numNodes; j++) {\n    //             links.push({ source: nodes[i].id, target: nodes[j].id}); \n    //         }\n    //     }\n    // }\n\n    const currLinks = []; \n    for (const element of links) {\n        currLinks.push({source: element.source, target: element.target, weight: element.weight})\n    }\n\n    // Initialize canvas to hold the graph\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    svg.selectAll(\"*\").remove();\n\n    // Define arrow marker\n    svg\n      .append('defs')\n      .append('marker')\n      .attr('id', 'arrow')\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 25)\n      .attr('refY', 5)\n      .attr('markerWidth', 6)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto')\n      .append('path')\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n      .attr('fill', '#7f8c8d');\n\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('charge', d3.forceManyBody())\n      .force(\n        'link',\n        d3.forceLink(currLinks).id((d) => d.id).distance(100)\n      )\n      .on('tick', ticked);\n\n    const linkSelection = svg\n      .selectAll('.link')\n      .data(currLinks)\n      .enter()\n      .append('line')\n      .attr('class', 'link')\n      .attr('stroke', (d) => matches(path, d) ? 'green' : 'black') // check current path\n      .attr('stroke-width', 1) \n      .attr('marker-end', 'url(#arrow)');\n\n    linkSelection.attr('fill', (d) => {\n        if (matches(path, d)) return 'green';\n        return 'black'; \n    })\n\n    function matches(path, link) {\n        // console.log('matches...')\n        // console.log(link)\n        for (const step of path) {\n            // console.log(step)\n            if (step.start === link.source.id && step.end === link.target.id) {\n                return true; \n            }\n        }\n        return false; \n    }\n\n    const nodeSelection = svg\n      .selectAll('circle')\n      .data(nodes)\n      .enter()\n      .append('circle')\n      .attr('r', 10)\n      .attr('fill', (d) => visited.includes(d.id) ? 'orange' : 'steelblue')\n      .attr('stroke', (d) => path.includes(d.id) ? 'green' : 'none')\n      .call(\n        d3\n          .drag()\n          .on('start', dragStart)\n          .on('drag', drag)\n          .on('end', dragEnd)\n      );\n\n      nodeSelection.attr('fill', (d) => {\n        if (d.id === current) return 'red'; \n        if (path.includes(d.id)) return 'green';  // Shortest path nodes\n        if (visited.includes(d.id)) return 'orange';  // Visited nodes\n        return 'steelblue';  // Default\n      });\n\n      const labelSelection = svg\n      .selectAll('text')\n      .data(nodes)\n      .enter()\n      .append('text')\n      .text((d) => d.id) // Display the node ID\n      .attr('font-size', 10)\n      .attr('fill', \"white\")\n      .attr('text-anchor', 'middle') // Center-align the text horizontally\n      .attr('dy', 4); // Position the text slightly above the circle\n\n      const linkLabels = svg\n        .selectAll('.link-label')\n        .data(currLinks)\n        .enter()\n        .append('text')\n        .attr('class', 'link-label')\n        .text((d) => d.weight) // Show the weight as text\n        .attr('font-size', 12)\n        .attr('fill', 'black');\n\n    function ticked() {\n      nodeSelection\n        .attr('cx', (d) => d.x)\n        .attr('cy', (d) => d.y);\n\n      linkSelection\n        .attr('x1', (d) => d.source.x)\n        .attr('y1', (d) => d.source.y)\n        .attr('x2', (d) => d.target.x)\n        .attr('y2', (d) => d.target.y);\n\n    labelSelection\n        .attr('x', (d) => d.x)\n        .attr('y', (d) => d.y); // Align the text exactly with the node center\n    linkLabels\n        .attr('x', (d) => (d.source.x + d.target.x) / 2 + 2)\n        .attr('y', (d) => (d.source.y + d.target.y) / 2 + 2);\n    }\n\n    function dragStart(event, d) {\n        // console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function drag(event, d) {\n        // console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragEnd(event, d) {\n        // console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n  }, [numNodes, links, visited, path, current]);\n\n \nconst elements = []; \nelements.push(<option key = {-1}>Select a node</option>)\nif (numNodes <= 26) {\n    for (let i = 0; i < numNodes; i++) {\n        const value = String.fromCharCode(65 + i); \n        elements.push(<option key = {value}>{value}</option>);\n    }\n}\n\n  return (\n    <div>\n        <div><span>Select number of nodes: </span><input type = \"number\" value = {numNodes} onChange={handleNumNodeChange} max=\"26\" \n  min=\"1\"></input></div>\n        <div><span>Add start of new edge: </span><select value = {newStart} onChange={handleStartChange}>{elements}</select></div>\n        <div><span>Add end of new edge: </span><select value = {newEnd} onChange={handleEndChange}>{elements}</select></div>\n        <div><span>Add weight of new edge: </span><input type = \"number\" value = {newWeight} onChange={handleNewWeight}></input></div>\n        <div><button onClick = {handleLinksChange}> Add New Edge </button> <button onClick = {handleClearEdges}>Clear Edges</button></div>\n        <div><span>Add start node: </span><select value = {dijkstraStart} onChange={handleDijkstraStart}>{elements}</select></div>\n        <div><span>Add end node: </span><select value = {dijkstraEnd} onChange={handleDijkstraEnd}>{elements}</select></div>\n        <div><button onClick = {handleDijkstra}> Run Dijkstra's </button><button onClick = {handleReset}>Reset</button></div>\n        \n        <div>\n            <svg ref={svgRef}></svg>\n        </div>\n    </div>\n    \n  );\n};\n\nexport default NetworkGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}