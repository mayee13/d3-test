{"ast":null,"code":"var _jsxFileName = \"/Users/viviansun/d3-test/src/components/NetWorkGraph.js\",\n  _s = $RefreshSig$();\n// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef();\n  const [numNodes, setNumNodes] = useState(1);\n  const [links, setLinks] = useState([]);\n  const [newStart, setNewStart] = useState(\"\");\n  const [newEnd, setNewEnd] = useState(\"\");\n\n  // console.log(numNodes); \n  const handleNumNodeChange = event => {\n    setNumNodes(event.target.value);\n    setLinks([]);\n  };\n  const handleStartChange = event => {\n    // console.log(\"changing start to...\")\n    // console.log(event.target.value)\n    setNewStart(event.target.value);\n  };\n  const handleEndChange = event => {\n    // console.log(\"changing end to...\")\n    // console.log(event.target.value)\n    setNewEnd(event.target.value);\n  };\n  const handleLinksChange = event => {\n    console.log(\"adding link between...\");\n    console.log(newStart);\n    console.log(newEnd);\n    addNewLink(newStart, newEnd);\n  };\n  const addNewLink = (startNode, endNode) => {\n    // console.log(\"adding new link...\")\n    // console.log(startNode)\n    // console.log(endNode)\n    const updatedLinks = [...links, {\n      source: startNode,\n      target: endNode\n    }];\n    setLinks(updatedLinks);\n  };\n  useEffect(() => {\n    console.log(\"current links...\");\n    console.log(links);\n    const width = 600;\n    const height = 400;\n    const nodes = [];\n    if (numNodes <= 26) {\n      for (let i = 0; i < numNodes; i++) {\n        nodes.push({\n          id: String.fromCharCode(65 + i)\n        });\n      }\n    }\n\n    // const links = []; \n\n    // if (numNodes <= 26) {\n    //     for (let i = 0; i < numNodes; i++) {\n    //         for (let j =i + 1; j < numNodes; j++) {\n    //             links.push({ source: nodes[i].id, target: nodes[j].id}); \n    //         }\n    //     }\n    // }\n\n    const currLinks = [];\n    for (const element of links) {\n      currLinks.push({\n        source: element.source,\n        target: element.target\n      });\n    }\n\n    // Initialize canvas to hold the graph\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll(\"*\").remove();\n\n    // Define arrow marker\n    svg.append('defs').append('marker').attr('id', 'arrow').attr('viewBox', '0 0 10 10').attr('refX', 25).attr('refY', 5).attr('markerWidth', 6).attr('markerHeight', 6).attr('orient', 'auto').append('path').attr('d', 'M 0 0 L 10 5 L 0 10 z').attr('fill', '#7f8c8d');\n    const simulation = d3.forceSimulation(nodes).force('center', d3.forceCenter(width / 2, height / 2)).force('charge', d3.forceManyBody()).force('link', d3.forceLink(currLinks).id(d => d.id).distance(100)).on('tick', ticked);\n    const linkSelection = svg.selectAll('.link').data(currLinks).enter().append('line').attr('class', 'link').attr('stroke', 'black').attr('stroke-width', 1).attr('marker-end', 'url(#arrow)');\n    const nodeSelection = svg.selectAll('circle').data(nodes).enter().append('circle').attr('r', 10).attr('fill', 'steelblue').call(d3.drag().on('start', dragStart).on('drag', drag).on('end', dragEnd));\n    const labelSelection = svg.selectAll('text').data(nodes).enter().append('text').text(d => d.id) // Display the node ID\n    .attr('font-size', 10).attr('fill', \"white\").attr('text-anchor', 'middle') // Center-align the text horizontally\n    .attr('dy', 4); // Position the text slightly above the circle\n\n    function ticked() {\n      nodeSelection.attr('cx', d => d.x).attr('cy', d => d.y);\n      linkSelection.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      labelSelection.attr('x', d => d.x).attr('y', d => d.y); // Align the text exactly with the node center\n    }\n    function dragStart(event, d) {\n      console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function drag(event, d) {\n      console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnd(event, d) {\n      console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, [numNodes, links]);\n  const elements = [];\n  elements.push(/*#__PURE__*/_jsxDEV(\"option\", {\n    children: \"Select a node\"\n  }, -1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 15\n  }, this));\n  if (numNodes <= 26) {\n    for (let i = 0; i < numNodes; i++) {\n      const value = String.fromCharCode(65 + i);\n      elements.push(/*#__PURE__*/_jsxDEV(\"option\", {\n        children: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select number of nodes: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numNodes,\n        onChange: handleNumNodeChange,\n        max: \"26\",\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add start of new link: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newStart,\n        onChange: handleStartChange,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add end of new link: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newEnd,\n        onChange: handleEndChange,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLinksChange,\n        children: \" Add New Link \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkGraph, \"VjHBto/BzSKKMsxgKTX3ucCgZu0=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","numNodes","setNumNodes","links","setLinks","newStart","setNewStart","newEnd","setNewEnd","handleNumNodeChange","event","target","value","handleStartChange","handleEndChange","handleLinksChange","console","log","addNewLink","startNode","endNode","updatedLinks","source","width","height","nodes","i","push","id","String","fromCharCode","currLinks","element","svg","select","current","attr","selectAll","remove","append","simulation","forceSimulation","force","forceCenter","forceManyBody","forceLink","d","distance","on","ticked","linkSelection","data","enter","nodeSelection","call","drag","dragStart","dragEnd","labelSelection","text","x","y","alphaTarget","restart","fx","fy","elements","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","max","min","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/viviansun/d3-test/src/components/NetWorkGraph.js"],"sourcesContent":["// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\n\nconst NetworkGraph = () => {\n  const svgRef = useRef();\n  const [numNodes, setNumNodes] = useState(1); \n  const [links, setLinks] = useState([]); \n  const [newStart, setNewStart] = useState(\"\");\n  const [newEnd, setNewEnd] = useState(\"\");\n\n  // console.log(numNodes); \n  const handleNumNodeChange = (event) => {\n    setNumNodes(event.target.value); \n    setLinks([])\n  }\n\n  const handleStartChange = (event) => {\n    // console.log(\"changing start to...\")\n    // console.log(event.target.value)\n    setNewStart(event.target.value); \n  }\n\n  const handleEndChange = (event) => {\n    // console.log(\"changing end to...\")\n    // console.log(event.target.value)\n    setNewEnd(event.target.value); \n  }\n\n  const handleLinksChange = (event) => {\n    console.log(\"adding link between...\")\n    console.log(newStart)\n    console.log(newEnd)\n    addNewLink(newStart, newEnd); \n  }\n\n  const addNewLink = (startNode, endNode) => {\n    // console.log(\"adding new link...\")\n    // console.log(startNode)\n    // console.log(endNode)\n    const updatedLinks = [...links, { source: startNode, target: endNode }];\n    setLinks(updatedLinks); \n  }\n\n  useEffect(() => {\n    console.log(\"current links...\")\n    console.log(links)\n    const width = 600;\n    const height = 400;\n\n    const nodes = []; \n\n    if (numNodes <= 26) {\n        for (let i = 0; i < numNodes; i++) {\n            nodes.push({id: String.fromCharCode(65 + i)});\n        }\n    }\n    \n\n    // const links = []; \n    \n    // if (numNodes <= 26) {\n    //     for (let i = 0; i < numNodes; i++) {\n    //         for (let j =i + 1; j < numNodes; j++) {\n    //             links.push({ source: nodes[i].id, target: nodes[j].id}); \n    //         }\n    //     }\n    // }\n\n    const currLinks = []; \n    for (const element of links) {\n        currLinks.push({source: element.source, target: element.target})\n    }\n\n    // Initialize canvas to hold the graph\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    svg.selectAll(\"*\").remove();\n\n    // Define arrow marker\n    svg\n      .append('defs')\n      .append('marker')\n      .attr('id', 'arrow')\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 25)\n      .attr('refY', 5)\n      .attr('markerWidth', 6)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto')\n      .append('path')\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n      .attr('fill', '#7f8c8d');\n\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('charge', d3.forceManyBody())\n      .force(\n        'link',\n        d3.forceLink(currLinks).id((d) => d.id).distance(100)\n      )\n      .on('tick', ticked);\n\n    const linkSelection = svg\n      .selectAll('.link')\n      .data(currLinks)\n      .enter()\n      .append('line')\n      .attr('class', 'link')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1)\n      .attr('marker-end', 'url(#arrow)');\n\n    const nodeSelection = svg\n      .selectAll('circle')\n      .data(nodes)\n      .enter()\n      .append('circle')\n      .attr('r', 10)\n      .attr('fill', 'steelblue')\n      .call(\n        d3\n          .drag()\n          .on('start', dragStart)\n          .on('drag', drag)\n          .on('end', dragEnd)\n      );\n\n      const labelSelection = svg\n      .selectAll('text')\n      .data(nodes)\n      .enter()\n      .append('text')\n      .text((d) => d.id) // Display the node ID\n      .attr('font-size', 10)\n      .attr('fill', \"white\")\n      .attr('text-anchor', 'middle') // Center-align the text horizontally\n      .attr('dy', 4); // Position the text slightly above the circle\n\n    function ticked() {\n      nodeSelection\n        .attr('cx', (d) => d.x)\n        .attr('cy', (d) => d.y);\n\n      linkSelection\n        .attr('x1', (d) => d.source.x)\n        .attr('y1', (d) => d.source.y)\n        .attr('x2', (d) => d.target.x)\n        .attr('y2', (d) => d.target.y);\n\n    labelSelection\n    .attr('x', (d) => d.x)\n    .attr('y', (d) => d.y); // Align the text exactly with the node center\n    }\n\n    function dragStart(event, d) {\n        console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function drag(event, d) {\n        console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragEnd(event, d) {\n        console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n  }, [numNodes, links]);\n\n \nconst elements = []; \nelements.push(<option key = {-1}>Select a node</option>)\nif (numNodes <= 26) {\n    for (let i = 0; i < numNodes; i++) {\n        const value = String.fromCharCode(65 + i); \n        elements.push(<option key = {value}>{value}</option>);\n    }\n}\n\n  return (\n    <div>\n        <div><span>Select number of nodes: </span><input type = \"number\" value = {numNodes} onChange={handleNumNodeChange} max=\"26\" \n  min=\"1\"></input></div>\n        <div>\n            <span>Add start of new link: </span><select value = {newStart} onChange={handleStartChange}>{elements}</select>\n        </div>\n        <div><span>Add end of new link: </span><select value = {newEnd} onChange={handleEndChange}>{elements}</select></div>\n        <div><button onClick = {handleLinksChange}> Add New Link </button></div>\n        <div>\n            <svg ref={svgRef}></svg>\n        </div>\n    </div>\n    \n  );\n};\n\nexport default NetworkGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}