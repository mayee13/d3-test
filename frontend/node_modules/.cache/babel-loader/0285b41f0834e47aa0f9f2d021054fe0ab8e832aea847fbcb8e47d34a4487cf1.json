{"ast":null,"code":"var _jsxFileName = \"/Users/viviansun/d3-test/src/components/NetWorkGraph.js\",\n  _s = $RefreshSig$();\n// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef();\n  const [numNodes, setNumNodes] = useState(1);\n  const [links, setLinks] = useState([]);\n  const [newStart, setNewStart] = useState(\"\");\n  const [newEnd, setNewEnd] = useState(\"\");\n  const [newWeight, setNewWeight] = useState(0);\n\n  // console.log(numNodes); \n  const handleNumNodeChange = event => {\n    setNumNodes(event.target.value);\n    setLinks([]);\n  };\n  const handleStartChange = event => {\n    // console.log(\"changing start to...\")\n    // console.log(event.target.value)\n    setNewStart(event.target.value);\n  };\n  const handleEndChange = event => {\n    // console.log(\"changing end to...\")\n    // console.log(event.target.value)\n    setNewEnd(event.target.value);\n  };\n  const handleLinksChange = event => {\n    console.log(\"adding link between...\");\n    console.log(newStart);\n    console.log(newEnd);\n    if (newStart !== \"Select a node\" && newEnd !== \"Select a node\") {\n      addNewLink(newStart, newEnd);\n    }\n  };\n  const addNewLink = (startNode, endNode) => {\n    console.log(\"adding new link...\");\n    console.log(startNode);\n    console.log(endNode);\n    const updatedLinks = [...links, {\n      source: startNode,\n      target: endNode,\n      weight: newWeight\n    }];\n    setLinks(updatedLinks);\n  };\n  const handleClearEdges = event => {\n    setLinks([]);\n  };\n  const handleNewWeight = event => {\n    setNewWeight(event.target.value);\n  };\n  useEffect(() => {\n    console.log(\"current links...\");\n    console.log(links);\n    const width = 600;\n    const height = 400;\n    const nodes = [];\n    if (numNodes <= 26) {\n      for (let i = 0; i < numNodes; i++) {\n        nodes.push({\n          id: String.fromCharCode(65 + i)\n        });\n      }\n    }\n\n    // const links = []; \n\n    // if (numNodes <= 26) {\n    //     for (let i = 0; i < numNodes; i++) {\n    //         for (let j =i + 1; j < numNodes; j++) {\n    //             links.push({ source: nodes[i].id, target: nodes[j].id}); \n    //         }\n    //     }\n    // }\n\n    const currLinks = [];\n    for (const element of links) {\n      currLinks.push({\n        source: element.source,\n        target: element.target,\n        weight: element.weight\n      });\n    }\n\n    // Initialize canvas to hold the graph\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    svg.selectAll(\"*\").remove();\n\n    // Define arrow marker\n    svg.append('defs').append('marker').attr('id', 'arrow').attr('viewBox', '0 0 10 10').attr('refX', 25).attr('refY', 5).attr('markerWidth', 6).attr('markerHeight', 6).attr('orient', 'auto').append('path').attr('d', 'M 0 0 L 10 5 L 0 10 z').attr('fill', '#7f8c8d');\n    const simulation = d3.forceSimulation(nodes).force('center', d3.forceCenter(width / 2, height / 2)).force('charge', d3.forceManyBody()).force('link', d3.forceLink(currLinks).id(d => d.id).distance(100)).on('tick', ticked);\n    const linkSelection = svg.selectAll('.link').data(currLinks).enter().append('line').attr('class', 'link').attr('stroke', 'black').attr('stroke-width', 1) // instead of just 1\n    .attr('marker-end', 'url(#arrow)');\n    const nodeSelection = svg.selectAll('circle').data(nodes).enter().append('circle').attr('r', 10).attr('fill', 'steelblue').call(d3.drag().on('start', dragStart).on('drag', drag).on('end', dragEnd));\n    const labelSelection = svg.selectAll('text').data(nodes).enter().append('text').text(d => d.id) // Display the node ID\n    .attr('font-size', 10).attr('fill', \"white\").attr('text-anchor', 'middle') // Center-align the text horizontally\n    .attr('dy', 4); // Position the text slightly above the circle\n\n    const linkLabels = svg.selectAll('.link-label').data(currLinks).enter().append('text').attr('class', 'link-label').text(d => d.weight) // Show the weight as text\n    .attr('font-size', 12).attr('fill', 'black');\n    function ticked() {\n      nodeSelection.attr('cx', d => d.x).attr('cy', d => d.y);\n      linkSelection.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      labelSelection.attr('x', d => d.x).attr('y', d => d.y); // Align the text exactly with the node center\n      linkLabels.attr('x', d => (d.source.x + d.target.x) / 2 + 2).attr('y', d => (d.source.y + d.target.y) / 2 + 2);\n    }\n    function dragStart(event, d) {\n      console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function drag(event, d) {\n      console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnd(event, d) {\n      console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, [numNodes, links]);\n  const elements = [];\n  elements.push(/*#__PURE__*/_jsxDEV(\"option\", {\n    children: \"Select a node\"\n  }, -1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 15\n  }, this));\n  if (numNodes <= 26) {\n    for (let i = 0; i < numNodes; i++) {\n      const value = String.fromCharCode(65 + i);\n      elements.push(/*#__PURE__*/_jsxDEV(\"option\", {\n        children: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select number of nodes: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numNodes,\n        onChange: handleNumNodeChange,\n        max: \"26\",\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add start of new edge: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newStart,\n        onChange: handleStartChange,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add end of new edge: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newEnd,\n        onChange: handleEndChange,\n        children: elements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 48\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Add weight of new edge: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newWeight,\n        onChange: handleNewWeight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLinksChange,\n        children: \" Add New Edge \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 14\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearEdges,\n        children: \"Clear Edges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 76\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkGraph, \"YkMfZddw9gJbpL0JDiiJee/Ar58=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","numNodes","setNumNodes","links","setLinks","newStart","setNewStart","newEnd","setNewEnd","newWeight","setNewWeight","handleNumNodeChange","event","target","value","handleStartChange","handleEndChange","handleLinksChange","console","log","addNewLink","startNode","endNode","updatedLinks","source","weight","handleClearEdges","handleNewWeight","width","height","nodes","i","push","id","String","fromCharCode","currLinks","element","svg","select","current","attr","selectAll","remove","append","simulation","forceSimulation","force","forceCenter","forceManyBody","forceLink","d","distance","on","ticked","linkSelection","data","enter","nodeSelection","call","drag","dragStart","dragEnd","labelSelection","text","linkLabels","x","y","alphaTarget","restart","fx","fy","elements","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","max","min","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/viviansun/d3-test/src/components/NetWorkGraph.js"],"sourcesContent":["// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\n\nconst NetworkGraph = () => {\n  const svgRef = useRef();\n  const [numNodes, setNumNodes] = useState(1); \n  const [links, setLinks] = useState([]); \n  const [newStart, setNewStart] = useState(\"\");\n  const [newEnd, setNewEnd] = useState(\"\");\n  const [newWeight, setNewWeight] = useState(0); \n\n  // console.log(numNodes); \n  const handleNumNodeChange = (event) => {\n    setNumNodes(event.target.value); \n    setLinks([])\n  }\n\n  const handleStartChange = (event) => {\n    // console.log(\"changing start to...\")\n    // console.log(event.target.value)\n    setNewStart(event.target.value); \n  }\n\n  const handleEndChange = (event) => {\n    // console.log(\"changing end to...\")\n    // console.log(event.target.value)\n    setNewEnd(event.target.value); \n  }\n\n  const handleLinksChange = (event) => {\n    console.log(\"adding link between...\")\n    console.log(newStart)\n    console.log(newEnd)\n    if (newStart !== \"Select a node\" && newEnd !== \"Select a node\") {\n        addNewLink(newStart, newEnd); \n    }\n  }\n\n  const addNewLink = (startNode, endNode) => {\n    console.log(\"adding new link...\")\n    console.log(startNode)\n    console.log(endNode)\n    const updatedLinks = [...links, { source: startNode, target: endNode, weight: newWeight }];\n    setLinks(updatedLinks); \n  }\n\n  const handleClearEdges = (event) => {\n    setLinks([]);\n  }\n\n  const handleNewWeight = (event) => {\n    setNewWeight(event.target.value); \n  }\n\n  useEffect(() => {\n    console.log(\"current links...\")\n    console.log(links)\n    const width = 600;\n    const height = 400;\n\n    const nodes = []; \n\n    if (numNodes <= 26) {\n        for (let i = 0; i < numNodes; i++) {\n            nodes.push({id: String.fromCharCode(65 + i)});\n        }\n    }\n    \n\n    // const links = []; \n    \n    // if (numNodes <= 26) {\n    //     for (let i = 0; i < numNodes; i++) {\n    //         for (let j =i + 1; j < numNodes; j++) {\n    //             links.push({ source: nodes[i].id, target: nodes[j].id}); \n    //         }\n    //     }\n    // }\n\n    const currLinks = []; \n    for (const element of links) {\n        currLinks.push({source: element.source, target: element.target, weight: element.weight})\n    }\n\n    // Initialize canvas to hold the graph\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    svg.selectAll(\"*\").remove();\n\n    // Define arrow marker\n    svg\n      .append('defs')\n      .append('marker')\n      .attr('id', 'arrow')\n      .attr('viewBox', '0 0 10 10')\n      .attr('refX', 25)\n      .attr('refY', 5)\n      .attr('markerWidth', 6)\n      .attr('markerHeight', 6)\n      .attr('orient', 'auto')\n      .append('path')\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n      .attr('fill', '#7f8c8d');\n\n    const simulation = d3\n      .forceSimulation(nodes)\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('charge', d3.forceManyBody())\n      .force(\n        'link',\n        d3.forceLink(currLinks).id((d) => d.id).distance(100)\n      )\n      .on('tick', ticked);\n\n    const linkSelection = svg\n      .selectAll('.link')\n      .data(currLinks)\n      .enter()\n      .append('line')\n      .attr('class', 'link')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1) // instead of just 1\n      .attr('marker-end', 'url(#arrow)');\n\n    const nodeSelection = svg\n      .selectAll('circle')\n      .data(nodes)\n      .enter()\n      .append('circle')\n      .attr('r', 10)\n      .attr('fill', 'steelblue')\n      .call(\n        d3\n          .drag()\n          .on('start', dragStart)\n          .on('drag', drag)\n          .on('end', dragEnd)\n      );\n\n      const labelSelection = svg\n      .selectAll('text')\n      .data(nodes)\n      .enter()\n      .append('text')\n      .text((d) => d.id) // Display the node ID\n      .attr('font-size', 10)\n      .attr('fill', \"white\")\n      .attr('text-anchor', 'middle') // Center-align the text horizontally\n      .attr('dy', 4); // Position the text slightly above the circle\n\n      const linkLabels = svg\n        .selectAll('.link-label')\n        .data(currLinks)\n        .enter()\n        .append('text')\n        .attr('class', 'link-label')\n        .text((d) => d.weight) // Show the weight as text\n        .attr('font-size', 12)\n        .attr('fill', 'black');\n\n    function ticked() {\n      nodeSelection\n        .attr('cx', (d) => d.x)\n        .attr('cy', (d) => d.y);\n\n      linkSelection\n        .attr('x1', (d) => d.source.x)\n        .attr('y1', (d) => d.source.y)\n        .attr('x2', (d) => d.target.x)\n        .attr('y2', (d) => d.target.y);\n\n    labelSelection\n        .attr('x', (d) => d.x)\n        .attr('y', (d) => d.y); // Align the text exactly with the node center\n    linkLabels\n        .attr('x', (d) => (d.source.x + d.target.x) / 2 + 2)\n        .attr('y', (d) => (d.source.y + d.target.y) / 2 + 2);\n    }\n\n    function dragStart(event, d) {\n        console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function drag(event, d) {\n        console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragEnd(event, d) {\n        console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n    \n  }, [numNodes, links]);\n\n \nconst elements = []; \nelements.push(<option key = {-1}>Select a node</option>)\nif (numNodes <= 26) {\n    for (let i = 0; i < numNodes; i++) {\n        const value = String.fromCharCode(65 + i); \n        elements.push(<option key = {value}>{value}</option>);\n    }\n}\n\n  return (\n    <div>\n        <div><span>Select number of nodes: </span><input type = \"number\" value = {numNodes} onChange={handleNumNodeChange} max=\"26\" \n  min=\"1\"></input></div>\n        <div>\n            <span>Add start of new edge: </span><select value = {newStart} onChange={handleStartChange}>{elements}</select>\n        </div>\n        <div><span>Add end of new edge: </span><select value = {newEnd} onChange={handleEndChange}>{elements}</select></div>\n        <div><span>Add weight of new edge: </span><input type = \"number\" value = {newWeight} onChange={handleNewWeight}></input></div>\n        <div><button onClick = {handleLinksChange}> Add New Edge </button> <button onClick = {handleClearEdges}>Clear Edges</button></div>\n        <div>\n            <svg ref={svgRef}></svg>\n        </div>\n    </div>\n    \n  );\n};\n\nexport default NetworkGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}