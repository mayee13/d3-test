{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nconst DirectedGraph = () => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    const width = 600;\n    const height = 400;\n    const data = {\n      nodes: [{\n        id: 'A'\n      }, {\n        id: 'B'\n      }, {\n        id: 'C'\n      }, {\n        id: 'D'\n      }, {\n        id: 'E'\n      }],\n      links: [{\n        source: 'A',\n        target: 'B'\n      }, {\n        source: 'A',\n        target: 'C'\n      }, {\n        source: 'A',\n        target: 'D'\n      }, {\n        source: 'A',\n        target: 'E'\n      }, {\n        source: 'B',\n        target: 'C'\n      }, {\n        source: 'B',\n        target: 'D'\n      }, {\n        source: 'B',\n        target: 'E'\n      }, {\n        source: 'C',\n        target: 'D'\n      }, {\n        source: 'C',\n        target: 'E'\n      }, {\n        source: 'D',\n        target: 'E'\n      }]\n    };\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n\n    // Define arrow marker\n    svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 0 10 10\").attr(\"refX\", 9).attr(\"refY\", 5).attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\").attr(\"fill\", \"#7f8c8d\");\n    const simulation = d3.forceSimulation(data.nodes).force('link', d3.forceLink(data.links).id(d => d.id).distance(150)).force('charge', d3.forceManyBody().strength(-300)).force('center', d3.forceCenter(width / 2, height / 2));\n\n    // Create links (edges)\n    svg.selectAll(\".link\").data(data.linnks).enter().append(\"line\").attr(\"class\", \"link\").attr(\"x1\", d => data.nodes[d.source - 1].x).attr(\"y1\", d => data.nodes[d.source - 1].y).attr(\"x2\", d => data.nodes[d.target - 1].x).attr(\"y2\", d => data.nodes[d.target - 1].y).attr(\"marker-end\", \"url(#arrow)\");\n\n    // Create node elements (nodes)\n    const node = svg.selectAll('.node').data(data.nodes).enter().append('circle').attr('class', 'node').attr('r', 10).attr('fill', 'steelblue').call(d3.drag().on('start', dragStart).on('drag', drag).on('end', dragEnd));\n\n    // Add labels to the nodes\n    svg.selectAll('.label').data(data.nodes).enter().append('text').attr('class', 'label').attr('x', 12).attr('y', 4).text(d => d.id);\n\n    // Update the positions of the links and nodes\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n    });\n\n    // Drag event functions\n    function dragStart(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function drag(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnd(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  });\n};\n_s(DirectedGraph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = DirectedGraph;\nexport default DirectedGraph;\nvar _c;\n$RefreshReg$(_c, \"DirectedGraph\");","map":{"version":3,"names":["useRef","useEffect","d3","DirectedGraph","_s","svgRef","width","height","data","nodes","id","links","source","target","svg","select","current","attr","append","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","selectAll","linnks","enter","x","y","node","call","drag","on","dragStart","dragEnd","text","link","event","active","alphaTarget","restart","fx","fy","_c","$RefreshReg$"],"sources":["/Users/viviansun/d3-test/src/components/DirectedGraph.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst DirectedGraph = () => {\n    const svgRef = useRef();\n\n    useEffect( () => {\n        const width = 600;\n        const height = 400;\n\n    const data = {\n        nodes: [\n            { id: 'A' },\n            { id: 'B' },\n            { id: 'C' },\n            { id: 'D' },\n            { id: 'E' },\n          ],\n          links: [\n            { source: 'A', target: 'B' },\n            { source: 'A', target: 'C' },\n            { source: 'A', target: 'D' },\n            { source: 'A', target: 'E' },\n            { source: 'B', target: 'C' },\n            { source: 'B', target: 'D' },\n            { source: 'B', target: 'E' },\n            { source: 'C', target: 'D' },\n            { source: 'C', target: 'E' },\n            { source: 'D', target: 'E' },\n\n          ],\n    };\n        const svg = d3\n            .select(svgRef.current)\n            .attr('width', width)\n            .attr('height', height);\n\n             // Define arrow marker\n    svg.append(\"defs\").append(\"marker\")\n    .attr(\"id\", \"arrow\")\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerWidth\", 6)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\")\n    .append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .attr(\"fill\", \"#7f8c8d\");\n\n            const simulation = d3.forceSimulation(data.nodes)\n            .force('link', d3.forceLink(data.links).id(d => d.id).distance(150))\n            .force('charge', d3.forceManyBody().strength(-300))\n            .force('center', d3.forceCenter(width / 2, height / 2));\n       \n       \n          // Create links (edges)\n    svg.selectAll(\".link\")\n      .data(data.linnks)\n      .enter().append(\"line\")\n      .attr(\"class\", \"link\")\n      .attr(\"x1\", d => data.nodes[d.source - 1].x)\n      .attr(\"y1\", d => data.nodes[d.source - 1].y)\n      .attr(\"x2\", d => data.nodes[d.target - 1].x)\n      .attr(\"y2\", d => data.nodes[d.target - 1].y)\n      .attr(\"marker-end\", \"url(#arrow)\");\n       \n       \n          // Create node elements (nodes)\n          const node = svg.selectAll('.node')\n            .data(data.nodes)\n            .enter().append('circle')\n            .attr('class', 'node')\n            .attr('r', 10)\n            .attr('fill', 'steelblue')\n            .call(d3.drag()\n              .on('start', dragStart)\n              .on('drag', drag)\n              .on('end', dragEnd));\n       \n       \n          // Add labels to the nodes\n          svg.selectAll('.label')\n            .data(data.nodes)\n            .enter().append('text')\n            .attr('class', 'label')\n            .attr('x', 12)\n            .attr('y', 4)\n            .text(d => d.id);\n       \n       \n          // Update the positions of the links and nodes\n          simulation.on('tick', () => {\n            link\n              .attr('x1', d => d.source.x)\n              .attr('y1', d => d.source.y)\n              .attr('x2', d => d.target.x)\n              .attr('y2', d => d.target.y);\n       \n       \n            node\n              .attr('cx', d => d.x)\n              .attr('cy', d => d.y);\n          });\n       \n       \n          // Drag event functions\n          function dragStart(event, d) {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            d.fx = d.x;\n            d.fy = d.y;\n          }\n       \n       \n          function drag(event, d) {\n            d.fx = event.x;\n            d.fy = event.y;\n          }\n       \n       \n          function dragEnd(event, d) {\n            if (!event.active) simulation.alphaTarget(0);\n            d.fx = null;\n            d.fy = null;\n          }\n       \n    })\n\n};\n\nexport default DirectedGraph; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}