{"ast":null,"code":"var _jsxFileName = \"/Users/viviansun/d3-test/src/components/NetWorkGraph.js\",\n  _s = $RefreshSig$();\n// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef();\n  const [numNodes, setNumNodes] = useState(0);\n  console.log(numNodes);\n  const handleNumNodeChange = event => {\n    setNumNodes(event.target.value);\n  };\n  useEffect(() => {\n    const width = 600;\n    const height = 400;\n    const nodes = [];\n    for (let i = 0; i < numNodes; i++) {\n      nodes.push({\n        id: String.fromCharCode(65 + i)\n      });\n    }\n    const data = {\n      nodes: [{\n        id: 'A'\n      }, {\n        id: 'B'\n      }, {\n        id: 'C'\n      }, {\n        id: 'D'\n      }, {\n        id: 'E'\n      }],\n      links: [{\n        source: 'A',\n        target: 'B'\n      }, {\n        source: 'A',\n        target: 'C'\n      }, {\n        source: 'A',\n        target: 'D'\n      }, {\n        source: 'A',\n        target: 'E'\n      }, {\n        source: 'B',\n        target: 'C'\n      }, {\n        source: 'B',\n        target: 'D'\n      }, {\n        source: 'B',\n        target: 'E'\n      }, {\n        source: 'C',\n        target: 'D'\n      }, {\n        source: 'C',\n        target: 'E'\n      }, {\n        source: 'D',\n        target: 'E'\n      }]\n    };\n\n    // Initialize canvas to hold the graph\n    const svg = d3.select(svgRef.current).attr('width', width).attr('height', height);\n    const simulation = d3.forceSimulation(data.nodes).force('center', d3.forceCenter(width / 2, height / 2)).force('charge', d3.forceManyBody()).force('link', d3.forceLink(data.links).id(d => d.id).distance(100)).on('tick', ticked);\n    const linkSelection = svg.selectAll('line').data(data.links).enter().append('line').attr('stroke', 'black').attr('stroke-width', 1);\n    const nodeSelection = svg.selectAll('circle').data(data.nodes).enter().append('circle').attr('r', 10).attr('fill', 'steelblue').call(d3.drag().on('start', dragStart).on('drag', drag).on('end', dragEnd));\n    function ticked() {\n      nodeSelection.attr('cx', d => d.x).attr('cy', d => d.y);\n      linkSelection.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n    }\n    function dragStart(event, d) {\n      console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function drag(event, d) {\n      console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnd(event, d) {\n      console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Select number of nodes: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: numNodes,\n        onChange: handleNumNodeChange,\n        max: \"26\",\n        min: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkGraph, \"1Qauwz5SOW3DYGFiwHXL7ZwUszk=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","numNodes","setNumNodes","console","log","handleNumNodeChange","event","target","value","width","height","nodes","i","push","id","String","fromCharCode","data","links","source","svg","select","current","attr","simulation","forceSimulation","force","forceCenter","forceManyBody","forceLink","d","distance","on","ticked","linkSelection","selectAll","enter","append","nodeSelection","call","drag","dragStart","dragEnd","x","y","alphaTarget","restart","fx","fy","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","max","min","ref","_c","$RefreshReg$"],"sources":["/Users/viviansun/d3-test/src/components/NetWorkGraph.js"],"sourcesContent":["// src/NetworkGraph.js\nimport React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\n\nconst NetworkGraph = () => {\n  const svgRef = useRef();\n  const [numNodes, setNumNodes] = useState(0); \n\n  console.log(numNodes); \n  const handleNumNodeChange = (event) => {\n    setNumNodes(event.target.value); \n  }\n\n  useEffect(() => {\n    const width = 600;\n    const height = 400;\n\n    const nodes = []; \n\n    for (let i = 0; i < numNodes; i++) {\n        nodes.push({id: String.fromCharCode(65 + i)});\n    }\n\n    const data = {\n        nodes: [\n            { id: 'A' },\n            { id: 'B' },\n            { id: 'C' },\n            { id: 'D' },\n            { id: 'E' },\n          ],\n          links: [\n            { source: 'A', target: 'B' },\n            { source: 'A', target: 'C' },\n            { source: 'A', target: 'D' },\n            { source: 'A', target: 'E' },\n            { source: 'B', target: 'C' },\n            { source: 'B', target: 'D' },\n            { source: 'B', target: 'E' },\n            { source: 'C', target: 'D' },\n            { source: 'C', target: 'E' },\n            { source: 'D', target: 'E' },\n\n          ],\n    };\n\n    // Initialize canvas to hold the graph\n    const svg = d3\n      .select(svgRef.current)\n      .attr('width', width)\n      .attr('height', height);\n\n    const simulation = d3\n      .forceSimulation(data.nodes)\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('charge', d3.forceManyBody())\n      .force(\n        'link',\n        d3.forceLink(data.links).id((d) => d.id).distance(100)\n      )\n      .on('tick', ticked);\n\n    const linkSelection = svg\n      .selectAll('line')\n      .data(data.links)\n      .enter()\n      .append('line')\n      .attr('stroke', 'black')\n      .attr('stroke-width', 1);\n\n    const nodeSelection = svg\n      .selectAll('circle')\n      .data(data.nodes)\n      .enter()\n      .append('circle')\n      .attr('r', 10)\n      .attr('fill', 'steelblue')\n      .call(\n        d3\n          .drag()\n          .on('start', dragStart)\n          .on('drag', drag)\n          .on('end', dragEnd)\n      );\n\n    function ticked() {\n      nodeSelection\n        .attr('cx', (d) => d.x)\n        .attr('cy', (d) => d.y);\n\n      linkSelection\n        .attr('x1', (d) => d.source.x)\n        .attr('y1', (d) => d.source.y)\n        .attr('x2', (d) => d.target.x)\n        .attr('y2', (d) => d.target.y);\n    }\n\n    function dragStart(event, d) {\n        console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function drag(event, d) {\n        console.log('dragging');\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n\n    function dragEnd(event, d) {\n        console.log('drag end');\n      simulation.alphaTarget(0.1);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, []);\n\n  return (\n    <div>\n        <div><span>Select number of nodes: </span><input type = \"number\" value = {numNodes} onChange={handleNumNodeChange} max=\"26\" \n  min=\"0\"></input></div>\n        <div>\n      <svg ref={svgRef}></svg>\n    </div>\n    </div>\n    \n  );\n};\n\nexport default NetworkGraph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}