{"ast":null,"code":"var _jsxFileName = \"/Users/viviansun/d3-test/src/components/NetWorkGraph.js\",\n  _s = $RefreshSig$();\n// src/NetworkGraph.js\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    const width = 600;\n    const height = 400;\n\n    // graph data (nodes and edges)\n    const data = {\n      nodes: [{\n        id: 'A'\n      }, {\n        id: 'B'\n      }, {\n        id: 'C'\n      }, {\n        id: 'D'\n      }],\n      links: [{\n        source: 'A',\n        target: 'B'\n      }, {\n        source: 'B',\n        target: 'C'\n      }, {\n        source: 'C',\n        target: 'D'\n      }, {\n        source: 'D',\n        target: 'A'\n      }]\n    };\n\n    // initialize canvas to hold the graph\n    const svg = d3.select(svgRef.current).attr('width', 600).attr('height', 400);\n    const simulation = d3.forceSimulation(data.nodes);\n    const nodeSelection = svg.selectAll(\"circle\").data(data.nodes).enter().append(\"circle\").attr(\"r\", d => d.size).attr(\"fill\", d => d.color).call(d3.drag().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd));\n    var linkSelection = svg.selectAll(\"line\").data(data.links).enter().append(\"line\").attr(\"stroke\", \"black\").attr(\"stroke-width\", 1);\n    node.attr('cx', (d, i) => (i + 1) * 100).attr('cy', height / 2);\n    simulation.force(\"center\", d3.forceCenter(width / 2, height / 2)).force(\"nodes\", d3.forceManyBody()).force(\"link\", d3.forceLink(data.links).id(d => d.id).distance(100)).on(\"tick\", ticked);\n    function ticked() {\n      // console.log(simulation.alpha());\n\n      nodeSelection.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n      linkSelection.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n    }\n    const link = svg.selectAll('.link').data(data.links).enter().append('line').attr('class', 'link').attr('stroke', '#000').attr('stroke-width', 2);\n    const node = svg.selectAll('.node').data(data.nodes).enter().append('circle').attr('class', 'node').attr('r', 10).attr('fill', 'blue');\n    const label = svg.selectAll('.label').data(data.nodes).enter().append('text').attr('class', 'label').attr('x', (d, i) => (i + 1) * 100 + 12).attr('y', height / 2 + 4).text(d => d.id);\n    function dragStart(event, d) {\n      // console.log('drag start');\n      simulation.alphaTarget(0.5).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function drag(event, d) {\n      // console.log('dragging');\n      // simulation.alpha(0.5).restart()\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragEnd(event, d) {\n      // console.log('drag end');\n      simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n};\n_s(NetworkGraph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","width","height","data","nodes","id","links","source","target","svg","select","current","attr","simulation","forceSimulation","nodeSelection","selectAll","enter","append","d","size","color","call","drag","on","dragStart","dragEnd","linkSelection","node","i","force","forceCenter","forceManyBody","forceLink","distance","ticked","x","y","link","label","text","event","alphaTarget","restart","fx","fy","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viviansun/d3-test/src/components/NetWorkGraph.js"],"sourcesContent":["// src/NetworkGraph.js\nimport React, { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst NetworkGraph = () => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const width = 600;\n    const height = 400;\n\n    // graph data (nodes and edges)\n    const data = {\n        nodes: [\n            { id: 'A' },\n            { id: 'B' },\n            { id: 'C' },\n            { id: 'D' },\n          ],\n          links: [\n            { source: 'A', target: 'B' },\n            { source: 'B', target: 'C' },\n            { source: 'C', target: 'D' },\n            { source: 'D', target: 'A' },\n          ],\n      };\n\n      // initialize canvas to hold the graph\n      const svg = d3.select(svgRef.current)\n        .attr('width', 600)\n        .attr('height', 400);\n    \n     const simulation = d3.forceSimulation(data.nodes);\n     const nodeSelection = svg\n      .selectAll(\"circle\")\n      .data(data.nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"r\", d => d.size)\n      .attr(\"fill\", d => d.color)\n      .call(\n        d3\n        .drag()\n        .on(\"start\", dragStart)\n        .on(\"drag\", drag)\n        .on(\"end\", dragEnd));\n    \n        var linkSelection = svg\n        .selectAll(\"line\")\n        .data(data.links)\n        .enter()\n        .append(\"line\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 1);\n\n    node.attr('cx', (d,i) => (i+1)*100).attr('cy', height/2); \n    \n     simulation\n        .force(\"center\", d3.forceCenter(width / 2, height / 2))\n        .force(\"nodes\", d3.forceManyBody())\n        .force(\n            \"link\",\n        d3\n        .forceLink(data.links)\n        .id(d => d.id)\n        .distance(100)\n        )\n  .on(\"tick\", ticked);\n\nfunction ticked() {\n  // console.log(simulation.alpha());\n\n  nodeSelection.attr(\"cx\", d => d.x).attr(\"cy\", d => d.y);\n  linkSelection\n    .attr(\"x1\", d => d.source.x)\n    .attr(\"y1\", d => d.source.y)\n    .attr(\"x2\", d => d.target.x)\n    .attr(\"y2\", d => d.target.y);\n}\n     \n    const link = svg.selectAll('.link')\n      .data(data.links)\n      .enter().append('line')\n      .attr('class', 'link')\n      .attr('stroke', '#000')\n      .attr('stroke-width', 2); \n\n    const node = svg.selectAll('.node')\n      .data(data.nodes)\n      .enter().append('circle')\n      .attr('class', 'node')\n      .attr('r', 10)\n      .attr('fill', 'blue'); \n\n    const label = svg.selectAll('.label')\n     .data(data.nodes)\n     .enter().append('text')\n     .attr('class', 'label')\n     .attr('x', (d, i) => (i + 1) * 100 + 12)\n     .attr('y', height / 2 + 4)\n     .text(d => d.id);\n\n\n\n      function dragStart(event, d) {\n        // console.log('drag start');\n        simulation.alphaTarget(0.5).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      }\n      \n      function drag(event, d) {\n        // console.log('dragging');\n        // simulation.alpha(0.5).restart()\n        d.fx = event.x;\n        d.fy = event.y;\n      }\n      \n      function dragEnd(event, d) {\n        // console.log('drag end');\n        simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      }\n      \n  }, [])\n\n  return <div>\n    <svg ref = {svgRef}></svg\n    ></div>\n};\n\nexport default NetworkGraph;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGP,MAAM,CAAC,CAAC;EAEvBC,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAG,GAAG;IACjB,MAAMC,MAAM,GAAG,GAAG;;IAElB;IACA,MAAMC,IAAI,GAAG;MACTC,KAAK,EAAE,CACH;QAAEC,EAAE,EAAE;MAAI,CAAC,EACX;QAAEA,EAAE,EAAE;MAAI,CAAC,EACX;QAAEA,EAAE,EAAE;MAAI,CAAC,EACX;QAAEA,EAAE,EAAE;MAAI,CAAC,CACZ;MACDC,KAAK,EAAE,CACL;QAAEC,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC,EAC5B;QAAED,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC,EAC5B;QAAED,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC,EAC5B;QAAED,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;IAElC,CAAC;;IAED;IACA,MAAMC,GAAG,GAAGd,EAAE,CAACe,MAAM,CAACV,MAAM,CAACW,OAAO,CAAC,CAClCC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAClBA,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;IAEvB,MAAMC,UAAU,GAAGlB,EAAE,CAACmB,eAAe,CAACX,IAAI,CAACC,KAAK,CAAC;IACjD,MAAMW,aAAa,GAAGN,GAAG,CACvBO,SAAS,CAAC,QAAQ,CAAC,CACnBb,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC,CAChBa,KAAK,CAAC,CAAC,CACPC,MAAM,CAAC,QAAQ,CAAC,CAChBN,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CACtBR,IAAI,CAAC,MAAM,EAAEO,CAAC,IAAIA,CAAC,CAACE,KAAK,CAAC,CAC1BC,IAAI,CACH3B,EAAE,CACD4B,IAAI,CAAC,CAAC,CACNC,EAAE,CAAC,OAAO,EAAEC,SAAS,CAAC,CACtBD,EAAE,CAAC,MAAM,EAAED,IAAI,CAAC,CAChBC,EAAE,CAAC,KAAK,EAAEE,OAAO,CAAC,CAAC;IAEpB,IAAIC,aAAa,GAAGlB,GAAG,CACtBO,SAAS,CAAC,MAAM,CAAC,CACjBb,IAAI,CAACA,IAAI,CAACG,KAAK,CAAC,CAChBW,KAAK,CAAC,CAAC,CACPC,MAAM,CAAC,MAAM,CAAC,CACdN,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CACvBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAE5BgB,IAAI,CAAChB,IAAI,CAAC,IAAI,EAAE,CAACO,CAAC,EAACU,CAAC,KAAK,CAACA,CAAC,GAAC,CAAC,IAAE,GAAG,CAAC,CAACjB,IAAI,CAAC,IAAI,EAAEV,MAAM,GAAC,CAAC,CAAC;IAEvDW,UAAU,CACNiB,KAAK,CAAC,QAAQ,EAAEnC,EAAE,CAACoC,WAAW,CAAC9B,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,CAAC,CAAC,CAAC,CACtD4B,KAAK,CAAC,OAAO,EAAEnC,EAAE,CAACqC,aAAa,CAAC,CAAC,CAAC,CAClCF,KAAK,CACF,MAAM,EACVnC,EAAE,CACDsC,SAAS,CAAC9B,IAAI,CAACG,KAAK,CAAC,CACrBD,EAAE,CAACc,CAAC,IAAIA,CAAC,CAACd,EAAE,CAAC,CACb6B,QAAQ,CAAC,GAAG,CACb,CAAC,CACNV,EAAE,CAAC,MAAM,EAAEW,MAAM,CAAC;IAErB,SAASA,MAAMA,CAAA,EAAG;MAChB;;MAEApB,aAAa,CAACH,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACiB,CAAC,CAAC,CAACxB,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACkB,CAAC,CAAC;MACvDV,aAAa,CACVf,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACZ,MAAM,CAAC6B,CAAC,CAAC,CAC3BxB,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACZ,MAAM,CAAC8B,CAAC,CAAC,CAC3BzB,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACX,MAAM,CAAC4B,CAAC,CAAC,CAC3BxB,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACX,MAAM,CAAC6B,CAAC,CAAC;IAChC;IAEI,MAAMC,IAAI,GAAG7B,GAAG,CAACO,SAAS,CAAC,OAAO,CAAC,CAChCb,IAAI,CAACA,IAAI,CAACG,KAAK,CAAC,CAChBW,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,MAAM,CAAC,CACtBN,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAE1B,MAAMgB,IAAI,GAAGnB,GAAG,CAACO,SAAS,CAAC,OAAO,CAAC,CAChCb,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC,CAChBa,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,QAAQ,CAAC,CACxBN,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;IAEvB,MAAM2B,KAAK,GAAG9B,GAAG,CAACO,SAAS,CAAC,QAAQ,CAAC,CACnCb,IAAI,CAACA,IAAI,CAACC,KAAK,CAAC,CAChBa,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,MAAM,CAAC,CACtBN,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CACtBA,IAAI,CAAC,GAAG,EAAE,CAACO,CAAC,EAAEU,CAAC,KAAK,CAACA,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,CACvCjB,IAAI,CAAC,GAAG,EAAEV,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CACzBsC,IAAI,CAACrB,CAAC,IAAIA,CAAC,CAACd,EAAE,CAAC;IAIf,SAASoB,SAASA,CAACgB,KAAK,EAAEtB,CAAC,EAAE;MAC3B;MACAN,UAAU,CAAC6B,WAAW,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,CAAC;MACrCxB,CAAC,CAACyB,EAAE,GAAGzB,CAAC,CAACiB,CAAC;MACVjB,CAAC,CAAC0B,EAAE,GAAG1B,CAAC,CAACkB,CAAC;IACZ;IAEA,SAASd,IAAIA,CAACkB,KAAK,EAAEtB,CAAC,EAAE;MACtB;MACA;MACAA,CAAC,CAACyB,EAAE,GAAGH,KAAK,CAACL,CAAC;MACdjB,CAAC,CAAC0B,EAAE,GAAGJ,KAAK,CAACJ,CAAC;IAChB;IAEA,SAASX,OAAOA,CAACe,KAAK,EAAEtB,CAAC,EAAE;MACzB;MACAN,UAAU,CAAC6B,WAAW,CAAC,CAAC,CAAC;MACzBvB,CAAC,CAACyB,EAAE,GAAG,IAAI;MACXzB,CAAC,CAAC0B,EAAE,GAAG,IAAI;IACb;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOhD,OAAA;IAAAiD,QAAA,eACLjD,OAAA;MAAKkD,GAAG,EAAI/C;IAAO;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACX,CAAC;AAACpD,EAAA,CA9HID,YAAY;AAAAsD,EAAA,GAAZtD,YAAY;AAgIlB,eAAeA,YAAY;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}